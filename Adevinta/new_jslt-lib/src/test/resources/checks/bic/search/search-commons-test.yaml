tests:
  - name: search-commons.jslt compiles and runs
    type: compile
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      c(.)

  - name: search-commons.jslt ex:check-search-id returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_id_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_id_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "maxRank": 20,
            "offset": 0
          }
        }
      c:check-search-id($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-type returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_type_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_type_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "maxRank": 20,
            "offset": 0
          }
        }
      c:check-search-type($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-source returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_source_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_source_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "maxRank": 20,
            "offset": 0
          }
        }
      c:check-search-source($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-display returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_display_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_display_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "maxRank": 20,
            "offset": 0
          }
        }
      c:check-search-display($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-filterOrigin returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_filterOrigin_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_filterOrigin_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "filterOrigin":"Pre-filled",
            "maxRank": 20,
            "offset": 0,
            "queryOrigin":"Previously searched"
          }
        }
      c:check-search-filterOrigin($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-maxRank returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_maxRank_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_maxRank_is_valid_number
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "filterOrigin":"Pre-filled",
            "maxRank": 20,
            "offset": 0,
            "queryOrigin":"Previously searched"
          }
        }
      c:check-search-maxRank($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-offset returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_offset_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_offset_is_valid_number
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "filterOrigin":"Pre-filled",
            "maxRank": 20,
            "offset": 0,
            "queryOrigin":"Previously searched"
          }
        }
      c:check-search-offset($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-queryOrigin returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_queryOrigin_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: search_queryOrigin_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "search": {
            "@id": "sdrn:leboncoin:search:6ef4aba1-c221-401b-bcf2-ebe80b99aa1b",
            "@type": "SearchMetadata",
            "source": "MainSearch",
            "display": "List",
            "filterOrigin":"Pre-filled",
            "maxRank": 20,
            "offset": 0,
            "queryOrigin":"Previously searched"
          }
        }
      c:check-search-queryOrigin($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-search-pageType returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: pageType_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: pageType_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
          "page": {
            "pageType": "ad_detail",
            "pageName": "page name free text"
          },
        }
      c:check-pageType($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-object-filters-locality returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: locality_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: locality_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "filters": {
              "adType":"sell",
              "carBrand":"",
              "carModel":"",
              "locality":"Ciudad de México",
              "maxPrice":"",
              "minPrice":"",
              "minRooms":"",
              "minSurface":"",
              "numItems":27,
              "propertyType":"",
              "query":"televison",
              "region":"Ciudad de México",
              "sorting":"Relevance",
              "urgent":false
            },
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-filters-locality($event, "search.ad-create", "ad-create", {})           
  - name: search-commons.jslt check-object-filters-query returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: query_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: query_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "filters": {
              "adType":"sell",
              "carBrand":"",
              "carModel":"",
              "locality":"Ciudad de México",
              "maxPrice":"",
              "minPrice":"",
              "minRooms":"",
              "minSurface":"",
              "numItems":27,
              "propertyType":"",
              "query":"televison",
              "region":"Ciudad de México",
              "sorting":"Relevance",
              "urgent":false
            },
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-filters-query($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-object-filters-region returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: region_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: region_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "filters": {
              "adType":"sell",
              "carBrand":"",
              "carModel":"",
              "locality":"Ciudad de México",
              "maxPrice":"",
              "minPrice":"",
              "minRooms":"",
              "minSurface":"",
              "numItems":27,
              "propertyType":"",
              "query":"televison",
              "region":"Ciudad de México",
              "sorting":"Relevance",
              "urgent":false
            },
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-filters-region($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-object-filters-sorting returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: sorting_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: sorting_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "filters": {
              "adType":"sell",
              "carBrand":"",
              "carModel":"",
              "locality":"Ciudad de México",
              "maxPrice":"",
              "minPrice":"",
              "minRooms":"",
              "minSurface":"",
              "numItems":27,
              "propertyType":"",
              "query":"televison",
              "region":"Ciudad de México",
              "sorting":"Relevance",
              "urgent":false
            },
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-filters-sorting($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-object-items-id returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: object_items_id_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: object_items_id_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "isTopPositionPremiumFeature":true,
            "items": [
                {
                  "@id":"sdrn:segundamanomx:classified:936690901",
                  "@type":"ClassifiedAd",
                  "category":"",
                  "name":"television en Todas las categorías en venta en Segundamano México | Segundamano.mx"
                }
            ],
            "inReplyTo": {
              "@type": "ClassifiedAd"
            },
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-items-id($event, "search.ad-create", "ad-create", {})             
  - name: search-commons.jslt check-object-numFilters returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: numFilters_is_present
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: numFilters_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "isTopPositionPremiumFeature":true,
            "items": [
                {
                  "@id":"sdrn:segundamanomx:classified:936690901",
                  "@type":"ClassifiedAd",
                  "category":"",
                  "name":"television en Todas las categorías en venta en Segundamano México | Segundamano.mx"
                }
            ],
            "numFilters":0,
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-numFilters($event, "search.ad-create", "ad-create", {})    
  - name: search-commons.jslt check-object-numItems returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: numItems_is_not_null
            check-result: 'true'
            check-impact: critical
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: numItems_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "object": {
            "isTopPositionPremiumFeature":true,
            "items": [
                {
                  "@id":"sdrn:segundamanomx:classified:936690901",
                  "@type":"ClassifiedAd",
                  "category":"",
                  "name":"television en Todas las categorías en venta en Segundamano México | Segundamano.mx"
                }
            ],
            "numItems":8173,
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-object-numItems($event, "search.ad-create", "ad-create", {})                                        
  - name: search-commons.jslt check-origin-elementType returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: origin_elementType_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: origin_elementType_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c
      let event =
        {
          "@type": "Create",
          "origin": {
            "page":{
              "pageType":"homepage"
            },
            "element" : {
              "elementType" : "banner"
            },
            "channel" : "Social Media",
            "url": "https://www.facebook.com/"
          },
          "object": {
            "isTopPositionPremiumFeature":true,
            "items": [
                {
                  "@id":"sdrn:segundamanomx:classified:936690901",
                  "@type":"ClassifiedAd",
                  "category":"",
                  "name":"television en Todas las categorías en venta en Segundamano México | Segundamano.mx"
                }
            ],
            "numItems":8173,
            "@type": "ClassifiedAd",
            "@id": "sdrn:666:classified:undefined"
          },
        }
      c:check-origin-elementType($event, "search.ad-create", "ad-create", {})
  - name: search-commons.jslt check-origin-pageType returns true if is not null with a pattern
    expected:
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: origin_pageType_is_not_null
            check-result: 'true'
            check-impact: minor
          delta: 1
      - quality.check:
          tags:
            check-suite: search.ad-create
            check-name: origin_pageType_is_valid
            check-result: 'true'
            check-impact: critical
          delta: 1
    expression: |
      import "checks/bic/search/search-commons.jslt" as c

      let event =
        {
          "name": "Listing viewed",
          "@id": "d5dfd92b-2c5c-42bc-a63c-a7d3ebbe5772",
          "origin": {
            "page":{
              "pageType":"search"
            },
            "element" : {
              "elementType" : "banner"
            },
            "channel" : "Social Media",
            "url": "https://www.facebook.com/"
          }        
        }
      c:check-origin-pageType($event, "search.ad-create", "ad-create", {}) 