import "lib/dates.jslt" as d
import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c

let adTypes = ["addeleted", "admodified", "adposted", "adprofessionalized", "adreactivated", "adrecategorized", "adrenewed", "privatecaradprofessionalized"]

let type = lowercase(fallback(."@type", ._AT_type))
let adTypeTag = m:tag("event-type", m:taggify($type, "unknown", $adTypes))

let check-suite = "milanuncios.ad"

let 15_min = 15 * 60

def check-dates-diff(root, diff-in-seconds)
   let published-date = d:string-to-date($root.published)
   let update-at-date = d:string-to-date($root.ad.audit.updatedAt)
   d:check-date-diff($published-date, $update-at-date, $diff-in-seconds)

 def is-published-after-updated(root)
   let published-date = d:string-to-date($root.published)
   let update-at-date = d:string-to-date($root.ad.audit.updatedAt)
   $published-date >= $update-at-date


c:check($check-suite, "published_not_null", c:check-not-null(.published), $adTypeTag, "critical")
+ c:check($check-suite, "updated_at_not_null", c:check-not-null(.ad.audit.updatedAt), $adTypeTag, "critical")
+ c:check($check-suite, "published_after_updated_at", is-published-after-updated(.), $adTypeTag, "critical")
+ c:check($check-suite, "published_and_updated_at_diff_less_than_15_min", check-dates-diff(., $15_min), $adTypeTag, "critical")
