import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/leboncoin/custom.jslt" as lbc

let status-tag = m:tag("status", m:taggify(lbc:get-status(.status), "unknown", ["active", "deleted", "inactive", "refused"]))

c:check("leboncoin.ads_action_states", "event_count", true, $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "status_completeness", lbc:check-completeness(.status), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "action_type_completeness", lbc:check-completeness(.action_type), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "state_completeness", lbc:check-completeness(.state), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "transition_completeness", lbc:check-completeness(.transition), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "ad_type_completeness", lbc:check-completeness(.ad_type), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "subject_completeness", lbc:check-completeness(.subject), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "body_completeness", lbc:check-completeness(.body), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "owner_user_id_completeness", lbc:check-completeness(.owner_user_id), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "country_completeness", lbc:check-completeness(.country), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "region_id_completeness", lbc:check-completeness(.region_id), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "department_id_completeness", lbc:check-completeness(.department_id), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "city_completeness", lbc:check-completeness(.city), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "zipcode_completeness", lbc:check-completeness(.zipcode), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "longitude_completeness", c:check-not-null(.longitude), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "latitude_completeness", c:check-not-null(.latitude), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "city_has_no_special_char", lbc:has-no-special-char(.city), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "ad_extended_params_are_json_strings", c:check-all([for (.ad_extended_params) lbc:is-json-string(.value)]), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "longitude_is_valid", lbc:is-longitude(.longitude), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "latitude_is_valid", lbc:is-latitude(.latitude), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "coordinates_are_valid", lbc:is-coordinates(.longitude, .latitude), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "event_datetime_is_valid", lbc:check-timestamp-format-non-utc-allowed(.event_datetime), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "state_timestamp_is_valid", lbc:check-timestamp-format-non-utc-allowed(.state_timestamp), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "index_date_is_valid", lbc:check-timestamp-format-non-utc-allowed(.index_date), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "orig_index_date_is_valid", lbc:check-timestamp-format-non-utc-allowed(.orig_index_date), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "last_edit_date_is_valid", lbc:check-timestamp-format-non-utc-allowed(.last_edit_date), $status-tag, "critical")
+
c:check("leboncoin.ads_action_states", "expiration_date_is_valid", lbc:check-timestamp-format-null-allowed(.expiration_date), $status-tag, "critical")
