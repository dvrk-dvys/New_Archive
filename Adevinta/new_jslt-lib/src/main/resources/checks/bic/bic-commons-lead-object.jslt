import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/bic/bic-commons.jslt" as bc

// Common checks for Leads object

def check-object-id(event, check-suite, apply-to, tags)
   // Patterns for each type of id are not checked because it would lead to duplicate the lead object into each type of lead
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_id_is_not_null", c:check-not-null($event.object."@id"), $tags, "critical")
   )
 
def check-object-type(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_type_is_not_null", c:check-not-null($event.object."@type"), $tags, "critical")
   ) 
   
def check-object-inReplyTo-id(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_inreplyto_id_is_not_null", c:check-not-null($event.object.inReplyTo."@id"), $tags, "critical")
      +c:check($check-suite, "object_inreplyto_id_sdrn_pattern", c:check-sdrn-classified-ad($event.object.inReplyTo."@id"), $tags, "critical")
   )

def check-object-inReplyTo-category(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_inreplyto_category_is_not_null", c:check-not-null($event.object.inReplyTo.category), $tags, "critical")
      +c:check($check-suite, "object_inreplyto_category_follows_pattern", c:check-mediaasset-category($event.object.inReplyTo.category), $tags, "critical")
   )

def check-object-inReplyTo-publisherType(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_inreplyto_publishertype_is_not_null", c:check-not-null($event.object.inReplyTo.publisherType), $tags, "critical")
   )

def check-object-inReplyTo-loc-addloc(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_inreplyto_loc_addloc_is_not_null", c:check-not-null($event.object.inReplyTo.location.addressLocality), $tags, "critical")
   )

def check-object-inReplyTo-loc-addreg(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_inreplyto_loc_addreg_is_not_null", c:check-not-null($event.object.inReplyTo.location.addressRegion), $tags, "critical")
   )

def check-object-inReplyTo-adtype(event, check-suite, apply-to, tags)
 bc:check-if-type(
    $event,
    $apply-to,
    c:check($check-suite, "object_inreplyto_adtype_is_not_null", c:check-not-null($event.object.adType), $tags, "critical")
 )

def check-object-url(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_url_is_not_null", c:check-not-null($event.object.url), $tags, "critical")
   )

def check-device-is-bot(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "device_is_bot_is_not_null", c:check-not-null($event.device.isBot), $tags, "critical")
   )