import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "lib/schemas.jslt" as schemas


// data collector tagging plan
// https://data.mpi-internal.com/500-resources/100-tutorials/500-routing/how-to-send-backend-events-to-data-collector/#data-requirements-to-publish-events-on-data-collector

let trackerTypeTag = m:tag("tracker", m:taggify(.tracker.type, "unknown", schemas:tracker-type-values()))
let objectTypeTag = m:tag("object-type", m:taggify(fallback(.object."@type", .object._AT_type), "unknown", schemas:object-type-values()))
let eventTypeTag = m:tag("event-type", m:taggify(fallback(."@type", ._AT_type), "unknown", schemas:event-type-values()))
let tags = $trackerTypeTag + $objectTypeTag + $eventTypeTag

c:check("data_platform.data_collector", "provider_id_not_null", c:check-not-null(fallback(.provider."@id", .provider._AT_id)), $tags, "blocker")
+c:check("data_platform.data_collector", "schema_url_valid", c:check-schema-url(.schema), $tags, "blocker")
+c:check("data_platform.data_collector", "deploystage_valid", c:check-one-of(.deployStage, ["dev", "pre", "pro", null]), $tags, "blocker")
