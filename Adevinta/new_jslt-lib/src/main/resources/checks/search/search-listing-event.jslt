import "checks/commons.jslt" as c
import "checks/search/search-commons.jslt" as s

let user-tags = s:base-tags()
let check-suite = "search.listing"

let regions-blacklist =  ["Összes régió"] 

//@id
s:check-id($check-suite, $user-tags,"critical")
// object
//      @id
+c:check($check-suite, "search.listing.object_id_is_present", c:check-not-null(.object."@id"), $user-tags, "critical")
+c:check($check-suite, "search.listing.object_id_is_valid", c:check-sdrn-listing(.object."@id") or c:check-null(.object."@id"), $user-tags, "critical")
//      category
+s:check-object-category($check-suite,$user-tags,"minor")
//      numItems
+c:check($check-suite, "search.listing.numItems_is_present", c:check-not-null(.object.numItems), $user-tags, "critical")
+c:check($check-suite, "search.listing.numItems_is_valid_number", c:check-number-ge-0(.object.numItems) or c:check-null(.object.numItems), $user-tags, "critical")
//      filters
//              sorting
+c:check($check-suite, "search.listing.sorting_is_present", c:check-not-null(.object.filters.sorting), $user-tags, "critical")
+c:check($check-suite, "search.listing.sorting_is_valid", c:check-one-of(.object.filters.sorting,[
                        "Relevance",
                        "PublishedTime",
                        "PriceAsc",
                        "PriceDesc",
                        "DistanceAsc",
                        "MilageAsc",
                        "MileageDesc",
                        "YearAsc",
                        "YearDesc",
                        "Other"
                    ]) or c:check-null(.object.filters.sorting), $user-tags, "critical")   
//              query
+c:check($check-suite, "search.listing.query_is_present", c:check-not-null(.object.filters.query), $user-tags, "minor")
+c:check($check-suite, "search.listing.query_is_valid",  is-string(.object.filters.query) or c:check-null(.object.filters.query), $user-tags, "critical")
//              region
+c:check($check-suite, "search.listing.region_is_present", c:check-not-null(.object.filters.region), $user-tags, "minor")
+c:check($check-suite, "search.listing.region_is_valid", (is-string(.object.filters.region) and not(c:check-one-of(.object.filters.region,$regions-blacklist))) or c:check-null(.object.filters.region), $user-tags, "critical")
//              locality
+c:check($check-suite, "search.listing.locality_is_present", c:check-not-null(.object.filters.locality), $user-tags, "minor")
+c:check($check-suite, "search.listing.locality_is_valid", is-string(.object.filters.locality) or c:check-null(.object.filters.locality), $user-tags, "critical")
//              numFilters
+c:check($check-suite, "search.listing.numFilters_is_present", c:check-not-null(.object.numFilters), $user-tags, "critical")
+c:check($check-suite, "search.listing.numFilters_is_valid_number", c:check-number-ge-0(.object.numFilters) or c:check-null(.object.numFilters), $user-tags, "critical")
            //  items
+c:check($check-suite, "search.listing.items_is_present", c:check-not-null(.object.items), $user-tags, "minor")
+c:check($check-suite, "search.listing.items_is_valid", (is-array(.object.items) and c:check-all([for (.object.items) is-string(."@id")])) or c:check-null(.object.items),$user-tags, "critical")                                          
// search
//      @id
//      @type
//      source
+s:check-search-all-mandatory($check-suite,$user-tags,"critical")
//      queryOrigin
+c:check($check-suite, "search.listing.search_queryOrigin_is_present", c:check-not-null(.search.queryOrigin), $user-tags, "minor")
+c:check($check-suite, "search.listing.search_queryOrigin_is_valid", c:check-one-of(.search.queryOrigin,[
                            "Suggested",
                            "Manually Typed",
                            "Previously Searched",
                            "Pre-filled"
                    ]) or c:check-null(.search.queryOrigin), $user-tags, "critical")   
//      filterOrigin
+c:check($check-suite, "search.listing.search_filterOrigin_is_present", c:check-not-null(.search.filterOrigin), $user-tags, "minor")
+c:check($check-suite, "search.listing.search_filterOrigin_is_valid", is-string(.search.filterOrigin) or c:check-null(.search.filterOrigin), $user-tags, "critical")   
//      display
+c:check($check-suite, "search.listing.search_display_is_present", c:check-not-null(.search.display), $user-tags, "critical")
+c:check($check-suite, "search.listing.search_display_is_valid", c:check-one-of(.search.display,[
                            "Grid",
                            "List"
                    ]) or c:check-null(.search.display), $user-tags, "critical")    
//      maxrank
+c:check($check-suite, "search.listing.maxRank_is_present", c:check-not-null(.search.maxRank), $user-tags, "critical")
+c:check($check-suite, "search.listing.maxRank_is_valid_number", c:check-number-ge-0(.search.maxRank) or c:check-null(.search.maxRank), $user-tags, "critical")
//      offset
+c:check($check-suite, "search.listing.offset_is_present", c:check-not-null(.search.offset), $user-tags, "critical")
+c:check($check-suite, "search.listing.offset_is_valid_number", c:check-number-ge-0(.search.offset) or c:check-null(.search.offset), $user-tags, "critical")
//page
//      pageType
+s:check-pageType($check-suite,$user-tags,"critical")
//origin
//      page
//              pageType
+s:check-originPageType($check-suite,$user-tags,"minor")
//      element
//              elementType
+c:check($check-suite, "search.listing.origin_elementType_is_present", c:check-not-null(.origin.element.elementType), $user-tags, "minor")
+c:check($check-suite, "search.listing.origin_elementType_is_valid", c:check-one-of(.origin.element.elementType,["banner"]) or c:check-null(.origin.element.elementType), $user-tags, "critical")
//      channel
+c:check($check-suite, "search.listing.origin_channel_is_present", c:check-not-null(.origin.channel), $user-tags, "minor")
+c:check($check-suite, "search.listing.origin_channel_is_valid", is-string(.origin.channel) or c:check-null(.origin.channel), $user-tags, "critical")
