tests:

  - name: schema-committee-suite.jslt compiles
    type: compile
    expression: |
      import "checks/data-platform/schema-committee-suite.jslt" as f
      f(.)

  - name: schema-committee-check-availability-for-pulse-field, no-check if !cond
    expected: true
    expression: |
      import "checks/data-platform/schema-committee-suite.jslt" as f
      import "checks/commons.jslt" as c

      f:schema-committee-check-availability-for-pulse-field(false, "xxx", "check-name") == c:no-check()

  - name: schema-committee-check-availability-for-pulse-field, tag format works as expected
    expected: true
    expression: |
      import "checks/data-platform/schema-committee-suite.jslt" as f

      f:schema-committee-check-availability-for-pulse-field(true, "xxx", "check-name")[0]."quality.check".tags.format == "string"
      and f:schema-committee-check-availability-for-pulse-field(true, 123, "check-name")[0]."quality.check".tags.format == "number"
      and f:schema-committee-check-availability-for-pulse-field(true, 123.4, "check-name")[0]."quality.check".tags.format == "number"
      and f:schema-committee-check-availability-for-pulse-field(true, {}, "check-name")[0]."quality.check".tags.format == "object"
      and f:schema-committee-check-availability-for-pulse-field(true, [], "check-name")[0]."quality.check".tags.format == "array"
      and f:schema-committee-check-availability-for-pulse-field(true, true, "check-name")[0]."quality.check".tags.format == "boolean"

  - name: schema-committee-suite is empty
    expected: true
    expression: |
      import "checks/data-platform/schema-committee-suite.jslt" as f

      let event =
      {
        "@type": "View",
        "object": {
          "@type": "ClassifiedAd"
        },
        "tracker": {
           "type": "Android"
        },
        "provider": {
          "@id": "sdrn:schibsted:client:kufarby",
          "@type": "Organization"
        },
        "schema": "http://schema.schibsted.com/events/tracker-event.json/161.json"
      }
      f($event) == []
