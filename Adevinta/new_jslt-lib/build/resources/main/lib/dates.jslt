import "lib/math.jslt" as math

// Returns the number of seconds since the epoch in the UTC timezone.
// If no timezone is specified in the time string, the timezone is assumed to be UTC.
// If the date cannot be parsed returns null.
// - date_string: date string. Supported formats:
//                yyyy-MM-dd'T'HH:mm:ss.SSSX
//                yyyy-MM-dd'T'HH:mm:ssX
def string-to-date(date_string)
   parse-time($date_string, "yyyy-MM-dd'T'HH:mm:ss.SSSX", parse-time($date_string, "yyyy-MM-dd'T'HH:mm:ssX", null))


// Evaluates if the absolute difference between dates is less or equals than the provided max difference.
// - date1: date to be compared to date2. If null, false value is returned.
// - date2: date to be compared to date1. If null, false value is returned.
// - max_diff_in_seconds: maximum difference between dates in seconds
def check-date-diff(date1,  date2, max_diff_in_seconds)
   if ($date1 == null or $date2 == null)
      false
   else
     let time_diff_seconds = round($date1) - round($date2)
     math:abs($time_diff_seconds) <= $max_diff_in_seconds


// Evaluates if the absolute difference between current date and the provided date is less or equals than the provided
// diff.
// - date: date to be evaluated. If null, false value is returned.
// - max_diff_in_seconds: maximum diff in seconds
def check-date-diff-to-now(date, max_diff_in_seconds)
   check-date-diff(now(),  $date, $max_diff_in_seconds)

