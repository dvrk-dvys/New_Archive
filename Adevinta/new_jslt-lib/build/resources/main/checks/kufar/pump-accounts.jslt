import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/kufar/custom.jslt" as k

// --------------------------------------------------------------------------------------------------------------------------
// Check suite assessing data quality of pump-accounts-analytics pipeline
// https://github.mpi-internal.com/Kufar/pump-accounts-analytics
// --------------------------------------------------------------------------------------------------------------------------

let check_suite_name = "kufar.pump_accounts"

let list_of_expected_account_actions = [
    "create",
    "activate",
    "pw_reset_req",
    "pw_reset",
    "param_change", 
    "block",
    "close",
    "activation_mail_resent",
    "delete",
    "wallet_refill",
    "set_verified_phone",
    "unset_verified_phone",
    "limit_package_1",
    "limit_package_2",
    "limit_package_3",
    "limit_package_4"
]

let account-actions = m:tag("account-action", m:taggify(.action, "unknown", $list_of_expected_account_actions))

let expected_max_query_lag_sec = 15

// --------------------------------------------------------------------------------------------------------------------------
// Definition of custom function used for this suite
// --------------------------------------------------------------------------------------------------------------------------

def check-account-params-equal-latest-changes(naive_params, param_latest_changes)
    if ($param_latest_changes != null and $naive_params != null and $param_latest_changes != $naive_params) false
    else true

def check-area-param(json_string, param_name)
    let area = k:get-json-object-number($json_string, $param_name)
    if ($area == null) true
    else if ($area == false) false
    else k:is-valid-by-area($area)

def check-region-param(json_string, param_name)
    let region = k:get-json-object-number($json_string, $param_name)
    if ($region == null) true
    else if ($region == false) false    
    else k:is-valid-by-region($region)

def check-gender-param(json_string, param_name)
    let gender = k:get-json-object-number($json_string, $param_name)
    c:check-one-of($gender, [1, 2, null])

def check-company-ad-param(json_string, param_name)
    let company_ad = k:get-json-object-number($json_string, $param_name)
    c:check-one-of($company_ad, [0, 1, null])

def check-phone-hidden-ad-param(json_string, param_name)
    let has_phone_hidden = k:get-json-object-number($json_string, $param_name)
    c:check-one-of($has_phone_hidden, [0, 1, null])

def check-date-of-birth-param(json_string, param_name)
    let date_of_birth = k:get-json-object-string($json_string, $param_name)
    c:check-null($date_of_birth) or test($date_of_birth, "^\\d{4}-\\d{2}-\\d{2}$")

def check-profile-image-param(json_string, param_name)
    let profile_image = k:get-json-object-string($json_string, $param_name)
    c:check-null($profile_image) or test($profile_image, "^\\d+$") or $profile_image == ""

// --------------------------------------------------------------------------------------------------------------------------
// Suite of tests
// --------------------------------------------------------------------------------------------------------------------------

// AVAILABILITY

c:check($check_suite_name, "event_id_is_not_null", c:check-not-null(.event_id), $account-actions, "blocker")
+
c:check($check_suite_name, "event_ts_utc_is_not_null", c:check-not-null(.event_ts_utc), $account-actions, "blocker")
+
c:check($check_suite_name, "query_lag_sec_is_not_null", c:check-not-null(.query_lag_sec), $account-actions, "minor")
+
c:check($check_suite_name, "action_id_is_not_null", c:check-not-null(.action_id), $account-actions, "blocker")
+
c:check($check_suite_name, "action_is_not_null", c:check-not-null(.action), $account-actions, "critical")
+
c:check($check_suite_name, "account_id_is_not_null", c:check-not-null(.account_id), $account-actions, "blocker")
+
c:check($check_suite_name, "email_is_not_null", c:check-not-null(.email), $account-actions, "critical")
+
c:check($check_suite_name, "naive_created_at_minsk_time_is_not_null", c:check-not-null(.naive_created_at_minsk_time), $account-actions, "critical")
+
c:check($check_suite_name, "naive_account_params_is_not_null", c:check-not-null(.naive_account_params), $account-actions, "blocker")
+

// VALIDITY

c:check($check_suite_name, "action_id_is_number", is-number(.action_id), $account-actions, "critical")
+
c:check($check_suite_name, "action_id_is_positive", c:check-number-gt-0(.action_id), $account-actions, "critical")
+
c:check($check_suite_name, "event_ts_utc_is_number", is-number(.event_ts_utc), $account-actions, "blocker")
+
c:check($check_suite_name, "event_ts_utc_is_unix_ts_in_milliseconds", k:check-unix-ts-in-ms(.event_ts_utc), $account-actions, "blocker")
+
c:check($check_suite_name, "query_lag_sec_is_number", is-number(.query_lag_sec), $account-actions, "critical")
+
c:check($check_suite_name, "query_lag_sec_is_positive", c:check-number-gt-0(.query_lag_sec), $account-actions, "minor")
+
c:check($check_suite_name, "account_action_is_one_of", c:check-one-of(.action, $list_of_expected_account_actions), $account-actions, "minor")
+
c:check($check_suite_name, "ip_is_correct", k:check-nullable-ip(.account_remote_addr), $account-actions, "critical")
+
c:check($check_suite_name, "email_is_correct", k:check-nullable-email(.email), $account-actions, "critical")
+
c:check($check_suite_name, "account_id_is_integer", is-number(.account_id), $account-actions, "critical")
+
c:check($check_suite_name, "account_id_is_positive", c:check-number-gt-0(.account_id), $account-actions, "critical")
+
c:check($check_suite_name, "account_status_is_one_of", c:check-one-of(.naive_status, [
                                                                            "active", 
                                                                            "blocked", 
                                                                            "closed", 
                                                                            "deleted", 
                                                                            "unverified"
                                                                            ]), $account-actions, "minor")
+
c:check($check_suite_name, "naive_created_at_minsk_time_is_number", is-number(.naive_created_at_minsk_time), $account-actions, "critical")
+
c:check($check_suite_name, "naive_last_login_minsk_time_is_nullable_number", k:is-nullable-number(.naive_last_login_minsk_time), $account-actions, "critical")
+
c:check($check_suite_name, "account_params_json_can_be_parsed", k:check-json-is-parsable(.naive_account_params), $account-actions, "blocker")
+
c:check($check_suite_name, "area_is_in_valid_range", check-area-param(.naive_account_params, "area"), $account-actions, "minor")
+
c:check($check_suite_name, "region_is_in_valid_range", check-region-param(.naive_account_params, "region"), $account-actions, "minor")
+
c:check($check_suite_name, "gender_is_boolean", check-gender-param(.naive_account_params, "gender"), $account-actions, "minor")
+
c:check($check_suite_name, "company_ad_is_boolean", check-company-ad-param(.naive_account_params, "company_ad"), $account-actions, "minor")
+
c:check($check_suite_name, "phone_hidden_is_boolean", check-phone-hidden-ad-param(.naive_account_params, "phone_hidden"), $account-actions, "minor")
+
c:check($check_suite_name, "date_of_birth_follows_pattern", check-date-of-birth-param(.naive_account_params, "date_of_birth"), $account-actions, "minor")
+
c:check($check_suite_name, "profile_image_follows_pattern", check-profile-image-param(.naive_account_params, "profile_image"), $account-actions, "minor")
+

// INTEGRITY

c:check($check_suite_name, "account_params_and_latest_changes_are_equal", check-account-params-equal-latest-changes(.naive_account_params, .acc_changes_new_values), $account-actions, "minor")
+

// TIMELINESS

c:check($check_suite_name, "query_lag_is_not_greater_than_expected", k:check-positive-number-is-not-gt(.query_lag_sec, $expected_max_query_lag_sec), $account-actions, "minor")