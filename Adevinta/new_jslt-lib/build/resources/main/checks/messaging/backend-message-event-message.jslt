import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c


// Migrated from https://github.mpi-internal.com/spt-dataanalytics/event-formats/blob/master/schema/master/checks/dqt/messaging-backend-events.json

let tags = {}
let suite = "messaging.backend.message-event-message-type"


def check-if-message-type-is(message-type, check)
  if (.object.messageType == $message-type)
     $check
  else []

// --------------------------------------------------------------------------------------------------------------------------
// Suite of tests
// --------------------------------------------------------------------------------------------------------------------------

// AVAILABILITY (existence)
c:check($suite, "object_id_is_not_null", c:check-not-null(.object."@id"), $tags, "critical")
+c:check($suite, "object_body_is_not_empty", c:check-not-empty(.object.body), $tags, "minor")
+c:check($suite, "object_is_first_message_is_not_null", c:check-not-null(.object.isFirstMessage), $tags, "critical")
+c:check($suite, "object_origin_is_not_null", c:check-not-null(.object.origin), $tags, "minor")
+check-if-message-type-is("SystemMessage", c:check($suite, "object_subType_is_not_empty",  c:check-not-empty(.object.messageType.subType), $tags, "critical"))

// VALIDITY (format)
+c:check($suite, "object_id_is_valid", c:check-sdrn-message(.object."@id"), $tags, "critical")
+c:check($suite, "object_is_first_message_is_valid", is-boolean(.object.isFirstMessage), $tags, "critical")
+c:check($suite, "object_origin_is_valid",  c:check-one-of(.object.origin, ["api","smtp"]), $tags, "critical")
