import "checks/commons.jslt" as c
import "checks/search/search-commons.jslt" as s

let user-tags = s:base-tags()
let check-suite = "search.lead"
//@id
s:check-id($check-suite,$user-tags,"critical")
//object
//      @id
+c:check($check-suite, "search.lead.object_id_is_present", c:check-not-null(.object."@id"), $user-tags, "critical")
//TODO One day we should check for object id depending on object type. Not today though.
+c:check($check-suite, "search.lead.object_id_is_valid", is-string(.object."@id") or c:check-null(.object."@id"), $user-tags, "critical")
//      inReplyTo
//              category
+c:check($check-suite, "search.lead.inReplyTo_category_is_present", c:check-not-null(.object.inReplyTo.category), $user-tags, "critical")
+c:check($check-suite, "search.lead.inReplyTo_category_is_valid", c:check-mediaasset-category(.object.inReplyTo.category) or c:check-null(.object.inReplyTo.category), $user-tags, "critical")
// search
//      @id
//      @type
//      source
+s:check-search-all-mandatory($check-suite,$user-tags,"critical")
//      rank
+s:check-search-rank($check-suite,$user-tags,"minor")
//page
//      pageType
+s:check-pageType($check-suite,$user-tags,"minor")
//origin
//      page
//          pageType
+s:check-originPageType($check-suite,$user-tags,"critical")