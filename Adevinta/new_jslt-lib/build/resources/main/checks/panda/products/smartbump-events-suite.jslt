import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/panda/commons.jslt" as panda-commons
import "checks/panda/products/commons.jslt" as cp

// This suite will check events in order to use panda/smartbump product. 

def suite-name()
   "panda.products.smartbump"

let typeTag = c:taggify-event-type(.)
let eventTypeTag = m:tag("obj-type", $typeTag)

let providerTag = m:tag("provider", m:taggify(.provider."@id", "unknown", panda-commons:available-providers()))

def isAdCreate(root)
    contains($typeTag, ["ad-create", "ad-edit"])

def isAdLifeCycle(root)
    contains($typeTag, ["ad-deletion", "ad-publish", "ad-unpublish", "ad-republish", "ad-update", "ad-save", "ad-update", "ad-bump", "ad-smartbump"])

def isAdListing(root)
    contains($typeTag, ["list-view"])

if (isAdCreate(.)) 
    cp:check-generic-fields(., suite-name(), $eventTypeTag, $providerTag)
    +
    cp:check-classified-ad-events(., suite-name(), $eventTypeTag, $providerTag)
    +
    cp:check-additional-fields(., suite-name(), $eventTypeTag, $providerTag)
else if (isAdLifeCycle(.))
    cp:check-generic-fields(., suite-name(), $eventTypeTag, $providerTag)
    +
    cp:check-classified-ad-events(., suite-name(), $eventTypeTag, $providerTag)
else if (isAdListing(.))
    cp:check-generic-fields(., suite-name(), $eventTypeTag, $providerTag)
    +
    cp:check-listing-events(., suite-name(), $eventTypeTag, $providerTag)
else c:no-check()
