import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/panda/commons.jslt" as panda-commons
import "checks/panda/utils.jslt" as utils


def suite-name()
   "panda.pulse-base"


let typeTag = c:taggify-event-type(.)
let eventTypeTag = m:tag("obj-type", $typeTag)

// These tags are used to mark each check by its type
// Are we checking validity of a field or availability of a field
let availabilityTag = m:tag("check-type", "availability")
let validityTag = m:tag("check-type", "validity")

let providerTag = m:tag("provider", m:taggify(.provider."@id", "unknown", panda-commons:available-providers()))

// check object.inReplyTo.publisher struct
def check-inreplyto-publisher(obj)
    if (contains($typeTag, ["email-contact-click", "externallink-contact-click", "ad-reply-submitted"]) and c:check-not-null($obj.inReplyTo) )
        c:check(
            suite-name(),
            "object_in_reply_to_publisher_id_available",
            c:check-not-null($obj.inReplyTo.publisher."@id"),
            $eventTypeTag + $availabilityTag + $providerTag ,
            "blocker"
            )
        +
        c:check(
            suite-name(),
            "object_in_reply_to_publisher_type_available",
            c:check-not-null($obj.inReplyTo.publisher."@type"),
            $eventTypeTag + $availabilityTag + $providerTag ,
            "blocker"
            )
    else
        []
// object.@type == PhoneContact
def check-phonecontact(obj)
    if (contains($typeTag, ["ad-phone-displayed", "ad-phone-called", "ad-sms-app-opened"]) and c:check-not-null($obj.inReplyTo))
        c:check(
            suite-name(),
            "object_in_reply_to_id_valid_format",
            c:check-sdrn-classified-ad($obj.inReplyTo."@id"),
            $eventTypeTag + $validityTag + $providerTag ,
            "blocker"
            )
        +
        utils:check-classified-ad(
            $obj.inReplyTo, "object_in_reply_to_", 
            suite-name(), $eventTypeTag, $validityTag, $availabilityTag , $providerTag )
    else []

// object.@type == ClassifiedAd

def check-ads(obj)
    if (contains($typeTag, ["ad-view", "ad-save", "ad-create", "ad-edit", "ad-deletion", "ad-bump", "ad-smartbump", "ad-republish", "ad-unpublish"]))
        utils:check-classified-ad($obj, "object_", suite-name(), $eventTypeTag, $validityTag, $availabilityTag, $providerTag )
    else []


panda-commons(.)
+ utils:check-creation-date(., suite-name(), $eventTypeTag, $validityTag, $availabilityTag, $providerTag)
+ check-phonecontact(.object)
+ check-ads(.object)
+ check-inreplyto-publisher(.object)