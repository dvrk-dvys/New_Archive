import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/panda/commons.jslt" as panda-commons
import "checks/panda/utils.jslt" as utils


def suite-name()
   "panda.ad_lifecycle"

let typeTag = c:taggify-event-type(.)
let eventTypeTag = m:tag("obj-type", $typeTag)

let providerTag = m:tag("provider", m:taggify(.provider."@id", "unknown", panda-commons:available-providers()))

// These tags are used to mark each check by its type
// Are we checking validity of a field or availability of a field
let availabilityTag = m:tag("check-type", "availability")
let validityTag = m:tag("check-type", "validity")

if (contains($typeTag, ["ad-create"]))
    panda-commons(.)
    + c:check(suite-name(), "publisher_id_not_null", c:check-not-null(.object.publisher."@id"), $eventTypeTag + $availabilityTag + $providerTag , "blocker")
    + c:check(suite-name(), "publisher_id_is_valid", c:check-sdrn-account-id(.object.publisher."@id"), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "categories_level_is_integer", utils:check-categories-level-integer(.object.categories), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "categories_local_id_is_not_null", utils:check-categories-local-id-not-null(.object.categories), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_not_null", c:check-not-null(.object.location), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_addressLocality_not_null", c:check-not-null(.object.location.addressLocality), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_addressRegion_not_null", c:check-not-null(.object.location.addressRegion), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_postalCode_not_null", c:check-not-null(.object.location.postalCode), $eventTypeTag + $validityTag + $providerTag , "recommended")
else if (contains($typeTag, ["ad-edit", "ad-deletion", "ad-publish", "ad-unpublish", "ad-republish", "ad-update"]))
    panda-commons(.)
    + c:check(suite-name(), "publisher_id_not_null", c:check-not-null(.object.publisher."@id"), $eventTypeTag + $availabilityTag + $providerTag , "blocker")
    + c:check(suite-name(), "publisher_id_is_valid", c:check-sdrn-account-id(.object.publisher."@id"), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "categories_level_is_integer", utils:check-categories-level-integer(.object.categories), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "categories_local_id_is_not_null", utils:check-categories-local-id-not-null(.object.categories), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_not_null", c:check-not-null(.object.location), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_addressLocality_not_null", c:check-not-null(.object.location.addressLocality), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_addressRegion_not_null", c:check-not-null(.object.location.addressRegion), $eventTypeTag + $validityTag + $providerTag , "blocker")
    + c:check(suite-name(), "object_location_postalCode_not_null", c:check-not-null(.object.location.postalCode), $eventTypeTag + $validityTag + $providerTag , "recommended")
    + utils:check-creation-date(., suite-name(), $eventTypeTag, $validityTag, $availabilityTag, $providerTag)
else []
