import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/panda/commons.jslt" as panda-commons
import "checks/panda/utils.jslt" as utils


def suite-name()
   "panda.contact_center"


let typeTag = c:taggify-event-type(.)
let eventTypeTag = m:tag("obj-type", $typeTag)

// These tags are used to mark each check by its type
// Are we checking validity of a field or availability of a field
let availabilityTag = m:tag("check-type", "availability")
let validityTag = m:tag("check-type", "validity")
let providerTag = m:tag("provider", m:taggify(.provider."@id", "unknown", panda-commons:available-providers()))

panda-commons(.)
+ utils:check-creation-date(., suite-name(), $eventTypeTag, $validityTag, $availabilityTag, $providerTag)
+
c:check(
    suite-name(),
    "initiator_id_not_null",
    c:check-not-null(.object.initiatorId),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "initiator_id_valid_format",
    c:check-sdrn-account-id(.object.initiatorId),
    $eventTypeTag + $validityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "initiator_name_not_null",
    c:check-not-null(.object.initiatorName),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "initiator_email_not_null",
    c:check-not-null(.object.initiatorEmail),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "initiator_email_valid_format",
    c:check-email(.object.initiatorEmail),
    $eventTypeTag + $validityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "recipient_id_not_null",
    c:check-not-null(.object.recipientId),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "recipient_id_valid_format",
    c:check-sdrn-account-id(.object.recipientId),
    $eventTypeTag + $validityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "ad_reply_type_valid_value",
    c:check-one-of(.object.adReplyType, ["email", "message", null]),
    $eventTypeTag + $validityTag + $providerTag ,
    "blocker"
    )
+
c:check(
    suite-name(),
    "is_moderated_not_null",
    c:check-not-null(.object.isModerated),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "blocker"
    )

+
c:check(
    suite-name(),
    "search_criteria_not_null",
    c:check-not-null(.search),
    $eventTypeTag + $availabilityTag + $providerTag ,
    "minor"
    )
