import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/bic/bic-commons.jslt" as bc

// Common checks for frontend tracker event
def check-type(event, check-suite, tags)
    c:check($check-suite, "type_is_not_null", c:check-not-null(fallback($event."@type", $event._AT_type)), $tags, "blocker")

def check-object-type(event, check-suite, tags)
    c:check($check-suite, "object_type_is_not_null", c:check-not-null(fallback($event.object."@type", $event.object._AT_type)), $tags, "blocker")

def check-name(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "name_is_not_null", c:check-not-null($event.name), $tags, "critical")
   )

def check-page-page-type(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "page_page_type_is_not_null", c:check-not-null($event.page.pageType), $tags, "critical")
   )

def check-page-page-name(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "page_page_name_is_not_null", c:check-not-null($event.page.pageName), $tags, "critical")
   )

def check-provider-id(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "provider_id_is_not_null", c:check-not-null($event.provider."@id"), $tags, "critical")
      +c:check($check-suite, "provider_id_sdrn_pattern", c:check-sdrn-provider($event.provider."@id"), $tags, "critical")
   )

def check-provider-product-type(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "provider_product_type_is_not_null", c:check-not-null($event.provider.productType), $tags, "critical")
   )

def check-actor-id(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "actor_id_is_not_null", c:check-not-null($event.actor."@id"), $tags, "critical")
   )

// TODO: it's going to be iterated when implementing leads events
def check-object-in-reply-to(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "object_in_reply_to_type_is_not_null", c:check-not-null(fallback($event.object.inReplyTo."@type", $event.object.inReplyTo._AT_type)), $tags, "critical")
   )

def check-origin-url(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "origin_url_is_not_null", c:check-not-null($event.origin.url), $tags, "critical")
   )

def check-published(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "published_is_not_null", c:check-not-null($event.published), $tags, "critical")
      + c:check($check-suite, "published_valid_format", c:check-timestamp-format($event.published), $tags, "critical")
   )

def check-device-environment-id(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "device_environment_id_not_null", c:check-not-null($event.device.environmentId), $tags, "critical")
      + c:check($check-suite, "device_environment_id_valid_format", c:check-sdrn-env-id($event.device.environmentId), $tags, "critical")
   )

def check-device-jwe-ids(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "device_jwe_ids_not_null_and_not_empty", c:check-not-null-and-not-empty($event.device.jweIds), $tags, "critical")
   )

def check-device-device-type(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "device_device_type_not_null_and_not_empty", c:check-not-null-and-not-empty($event.device.deviceType), $tags, "critical")
   )

def check-tracker-type(event, check-suite, apply-to, tags)
   bc:check-if-type(
      $event,
      $apply-to,
      c:check($check-suite, "tracker_type_not_null_and_not_empty", c:check-not-null-and-not-empty($event.tracker.type), $tags, "critical")
   )