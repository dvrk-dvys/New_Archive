import "lib/metrics.jslt" as m
import "checks/commons.jslt" as c
import "checks/yapo/commons.jslt" as y


// Set suit and user-tags
let check-suite = "yapo.suggested-faqs-custom-events-suite"
let user-tags = y:common-tags()

// Set value domain for json keys
let valid-object-adType = ["sell", "buy", "rent", "let", "lease"]
let valid-object-publisherType = ["pro", "private"]

// Contenido Object.elementType
def event-faq-element-type-patern(name, obj)
    if ($name == "Ad Details Generic Faqs Display")
        test($obj, "^.+- Questions:(.+)$")
    else if ($name == "Ad Details Generic Faqs Questions")
        test($obj, "^.+- id:[0-9]+, question:(.+)$")
    else test($obj, "^.+$")

// Event principal keys-values
c:check($check-suite, "object_id_patern", y:event-object-id-with-classified-patern(.object."@id"), $user-tags, "critical")
+ c:check($check-suite, "object_adId_patern", c:check-number-ge-0(.object.adId), $user-tags, "critical")
+ c:check($check-suite, "object_adType_verification", c:check-one-of(.object.adType, $valid-object-adType), $user-tags, "critical")
+ c:check($check-suite, "object_category_patern", c:check-mediaasset-category(.object.category), $user-tags, "critical")
+ c:check($check-suite, "object_contentId_patern", y:event-object-contentId-patern(.object.contentId), $user-tags, "critical")
+ c:check($check-suite, "object_faq_elementType_patern", event-faq-element-type-patern(.name, .object.elementType), $user-tags, "critical")
+ c:check($check-suite, "object_price_integer_positive", c:check-number-ge-0(.object.price), $user-tags, "critical")
+ c:check($check-suite, "object_publisherType_verification", c:check-one-of(.object.publisherType, $valid-object-publisherType), $user-tags, "critical")

// Location object
+ c:check($check-suite, "object_location_type_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.location."@type"), $user-tags, "critical")
+ c:check($check-suite, "object_location_addressRegion_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.location.addressRegion), $user-tags, "critical")

// Categories object
+ c:check($check-suite, "object_categories_type_level0_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[0]."@type"), $user-tags, "critical")
+ c:check($check-suite, "object_level_0_integer_positive", c:check-number-ge-0(.object.categories[0].level), $user-tags, "critical")
+ c:check($check-suite, "object_categories_localName_level0_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[0].localName), $user-tags, "critical")
+ c:check($check-suite, "object_categories_name_level0_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[0].name), $user-tags, "critical")
+ c:check($check-suite, "object_categories_localId_level0_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[0].localId), $user-tags, "critical")
+ c:check($check-suite, "object_categories_type_level1_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[1]."@type"), $user-tags, "critical")
+ c:check($check-suite, "object_level_1_integer_positive", c:check-number-ge-0(.object.categories[1].level), $user-tags, "critical")
+ c:check($check-suite, "object_categories_localName_level1_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[1].localName), $user-tags, "critical")
+ c:check($check-suite, "object_categories_name_level1_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[1].name), $user-tags, "critical")
+ c:check($check-suite, "object_categories_localId_level1_not_null_and_not_empty", c:check-not-null-and-not-empty(.object.categories[1].localId), $user-tags, "critical")